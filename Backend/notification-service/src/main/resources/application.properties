spring.application.name=application-service
server.port=8080

# Cloudinary (externalized)
cloudinary.cloud_name=${CLOUDINARY_CLOUD_NAME}
cloudinary.api_key=${CLOUDINARY_API_KEY}
cloudinary.api_secret=${CLOUDINARY_API_SECRET}

# Downstream user-service HTTP endpoint (example)
user.service.url=${USER_SERVICE_HTTP_URL:http://user-service:8080}


#spring.application.name=user-service
#spring.datasource.url=jdbc:h2:file:./data/demo
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.jpa.hibernate.ddl-auto=update
#spring.h2.console.enabled=true

# PostgreSQL Database Configuration (externalized)
# Prefer explicit URL if SPRING_DATASOURCE_URL is provided; else construct from parts.
# Supports optional extra params in DB_JDBC_PARAMS (include leading & if you set it, e.g. &channelBinding=require)
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://${DB_HOST:postgres}:${DB_PORT:5432}/${DB_NAME:mydb}?sslmode=${DB_SSL_MODE:disable}${DB_JDBC_PARAMS:}}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:${DB_USERNAME}}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:${DB_PASSWORD}}
spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate (JPA) settings
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

# Optional: show SQL queries in the console
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true


jwt.secret=${JWT_SECRET}

# Debug logging to diagnose datasource issues (can remove later)
logging.level.org.springframework.boot.autoconfigure.jdbc=DEBUG
logging.level.com.zaxxer.hikari=DEBUG
